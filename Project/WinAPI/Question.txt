포트폴리오 + 이력서 + 자소서 + 기술문서
서류 지원-> Ok -> 프로그래밍에 대한 이해 (자료구조 + 알고리즘)


1. 게임 제작에 있어서 관심분야?
	ㄴ 충돌 프로그래밍

2. C / C++ 차이
	ㄴ 
	C = 절차지향 프로그래밍
	C++ = 객체지향 프로그래밍, 일반화 프로그래밍
	c++은 클래스로 객체 를 나눌수 있으며 유지보수에 특화되어있다
	C는 오버로딩을 지원하지 않고 함수기반
	

3.굳이 C++ 을 왜 사용하고 공부해야 하는지?
	ㄴ
	C++ 은 빠른 연산이 필요한 게임,서버 등 특정 분야에서 다른 언어보다 강력하기 때문이다
	또한 메모리를 조절할수있는 강력한 언어이고 유지보수관리에 쉽기때문이다

4.오버로딩 + 오버라이딩 개념 및 설명
	ㄴ
	오버로딩: 함수의 중복정의 
	오버라이딩: 함수의 재정의
	
	오버로딩은 함수명이 같고 매개 변수의 타입이나 개수가 다른 함수를 허용하는 것이다.
	즉 함수명이 같아도 전달받는 인자의 개수 , 타입이 다르면 서로 다른 함수로 인식한다는것
	
	오버라이딩은 함수를 자식 클래스가 재정의 할 수 있게 해주는기능.


5.Stack과 Heap의 차이 및 설명
	ㄴ
	힙은 사용자가 직접 관리할수 있는 메모리 영역 또한 메모리의 낮은 주소에서 높은 주소의 방향으로 할당
	스택은 함수의 호출과 함께 할당되고 호출이 끝나면 소멸한다 후입선출 방식에 따라 동작하므로 늦게 저장된 데이터가 가장먼저 인출
	스택은 메모리의 높은 주소에서 낮은 주소로 할당

6.전역, 지역, 동적 변수등 변수의 LifeCycle 설명
	ㄴAllocate-> Release-> Memory Pool

7.Get Set 설명
	ㄴ

8. struct / class 차이점
	ㄴ
struct의 접근 지시자는 public으로 통일되어 있지만
class 는 멤버별로 각각 다른 접근 지시자를 지정해줄수있다

class는 구조체의 확장형이다
	ㄴ 디폴트 엑세스 지정자는 public	->구조체
	ㄴ 디폴트 엑세스 지정자는 private	->클래스

-클래스는 기본적으로 접근 제어 지시자를 명시하지 않았을 경우 기본적으로
private 으로 선언된다.

9. new / Malloc 개념 및 차이점
	ㄴ new = 동적할당 하는 키워드 동적할당한후 꼭 지워야한다 안그럼 메모리에 계속 남음
재할당이 많이 이루어져야 하는 경우 malloc이 편하다

10.C++ / C# 차이점
(1). malloc은 라이브러리 제공 함수로, stdlib.h 을 include 해주어야 사용 가능하지만, new는 기본으로 제공하는 키워드이므로 별도의 라이브러리 추가 없이 바로 사용 가능합니다.
(2). malloc은 사이즈를 매개변수로 받고, 리턴타입이 void*형이므로 sizeof()와 캐스팅을 활용해야 쉬운 코딩이 가능합니다. 반면에 new는 할당할 타입을 지정하면 알아서 할당할 타입의 포인터로 넘어오기 때문에 할당할 타입과 같은 타입의 포인터 변수로 받아오기만 하면 됩니다.
(3). malloc은 메모리를 동적으로 할당하는 것만이 목적이기때문에 초기값을 지정해줄 수 없지만, new는 할당과 동시에 초기화가 가능합니다.
(4). new는 생성자를 자동으로 호출합니다. 생성자는 객체를 자동으로 초기화해주는 함수로, malloc과 new의 가장 큰 차이점입니다.
new 는 생성자와 소멸자를 호출 해야한다

10. 포인터란 무엇인가 (Call By Value, Call By Reference)

11. 포인터와 참조자의 차이점

12. GetMessage PeekMessage 차이점

13. CallBack Function 개념 및 설명

14. C++ / C# 메모리 차이점

15. 메모리의 구조에 대한 설명

16. this 를 쓰는 이유

이름 중복에의 한 모호함을 없애준다.
모든 클래스의 멤버 함수는 자기 자신을 지칭하는 this 키워드를 이용하는것이 가능
		ㄴ this 키워드를 활용하면 이름 중복에 의해서 발생하는 우선 순위에 대한
		모호함을 없애는 것이 가능